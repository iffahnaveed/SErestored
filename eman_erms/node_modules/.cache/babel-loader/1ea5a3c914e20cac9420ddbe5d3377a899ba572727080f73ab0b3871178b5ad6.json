{"ast":null,"code":"const API_URL = 'http://localhost:5000/api/auth';\n\n// ✅ Correct export names\nexport const signupHR = async userData => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  return response.json();\n};\nexport const loginHR = async userData => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  return response.json();\n};","map":{"version":3,"names":["API_URL","signupHR","userData","response","fetch","method","headers","body","JSON","stringify","json","loginHR"],"sources":["D:/Users/SEPROJECT/erms/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api/auth';\r\n\r\n// ✅ Correct export names\r\nexport const signupHR = async (userData) => {\r\n  const response = await fetch(`${API_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(userData),\r\n  });\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const loginHR = async (userData) => {\r\n  const response = await fetch(`${API_URL}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(userData),\r\n  });\r\n\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,gCAAgC;;AAEhD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,SAAS,EAAE;IAChDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOT,QAAQ,IAAK;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;IAC/CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}