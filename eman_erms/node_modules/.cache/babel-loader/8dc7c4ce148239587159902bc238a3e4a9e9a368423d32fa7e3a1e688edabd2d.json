{"ast":null,"code":"export const login = async userData => {\n  try {\n    const response = await fetch('http://localhost:5000/api/hr/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return await response.json(); // Parse the response JSON\n  } catch (error) {\n    return {\n      message: 'Server error'\n    }; // Catch request failures\n  }\n};\nexport const submitContract = async (contractData, token) => {\n  try {\n    const response = await fetch(\"http://localhost:3000/api/hr/contract\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}` // Send authentication token\n      },\n      body: JSON.stringify(contractData)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"Contract Submission Error:\", error);\n    return {\n      message: \"Server error\"\n    };\n  }\n};","map":{"version":3,"names":["login","userData","response","fetch","method","headers","body","JSON","stringify","json","error","message","submitContract","contractData","token","Authorization","console"],"sources":["D:/Users/SEPROJECT/erms/src/services/api.js"],"sourcesContent":["export const login = async (userData) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/hr/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    return await response.json();  // Parse the response JSON\r\n  } catch (error) {\r\n    return { message: 'Server error' };  // Catch request failures\r\n  }\r\n};\r\n\r\nexport const submitContract = async (contractData, token) => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:3000/api/hr/contract\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`, // Send authentication token\r\n      },\r\n      body: JSON.stringify(contractData),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Contract Submission Error:\", error);\r\n    return { message: \"Server error\" };\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CAAE;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEC,OAAO,EAAE;IAAe,CAAC,CAAC,CAAE;EACvC;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,YAAY,EAAEC,KAAK,KAAK;EAC3D,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCU,aAAa,EAAE,UAAUD,KAAK,EAAE,CAAE;MACpC,CAAC;MACDR,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,YAAY;IACnC,CAAC,CAAC;IAEF,OAAO,MAAMX,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO;MAAEC,OAAO,EAAE;IAAe,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}