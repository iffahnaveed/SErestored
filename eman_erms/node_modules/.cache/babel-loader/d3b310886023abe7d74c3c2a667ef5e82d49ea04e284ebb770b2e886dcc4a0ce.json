{"ast":null,"code":"const BASE_URL = 'http://localhost:5000/api/auth';\n\n// Signup function\nexport const signup = async userData => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n\n    // Check if the response is OK (status code 2xx)\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Signup failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Signup error:', error);\n    return {\n      message: error.message || 'Server error'\n    };\n  }\n};\n\n// Login function\nexport const login = async userData => {\n  try {\n    const response = await fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n\n    // Check if the response is OK (status code 2xx)\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Login failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      message: error.message || 'Server error'\n    };\n  }\n};","map":{"version":3,"names":["BASE_URL","signup","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","error","console","login"],"sources":["D:/Users/SEPROJECT/erms/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5000/api/auth';\r\n\r\n// Signup function\r\nexport const signup = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    // Check if the response is OK (status code 2xx)\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Signup failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    return { message: error.message || 'Server error' };\r\n  }\r\n};\r\n\r\n// Login function\r\nexport const login = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    // Check if the response is OK (status code 2xx)\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Login failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    return { message: error.message || 'Server error' };\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,gCAAgC;;AAEjD;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;MACjDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;;IAEF;IACA,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,eAAe,CAAC;IACvD;IAEA,OAAO,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO;MAAED,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAe,CAAC;EACrD;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,KAAK,GAAG,MAAOf,QAAQ,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,QAAQ,EAAE;MAChDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;;IAEF;IACA,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,cAAc,CAAC;IACtD;IAEA,OAAO,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO;MAAED,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAe,CAAC;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}